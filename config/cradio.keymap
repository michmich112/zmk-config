/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
        // DEFAULT
        // ----------------------------------------------------------------------------------------------
        // |   Q   |   W   |   E   |   R   |   T   |            |   Y   |   U   |   I   |   O   |   P   |
        // |   A   |   S   |   D   |   F   |   G   |            |   H   |   J   |   K   |   L   |   "   |
        // | LSFT Z|   X   |   C   |   V   |   B   |            |   N   |   M   |   ,   |   .   |  RET  |
        //                         | LOWER |  LCTL |            | SPACE | RAISE |

        // TARGET
        // ----------------------------------------------------------------------------------------------
        // | ESC Q |   D   |   R   |   W   |   B   |            |   J   |   F   |   U   |   P   |   ;   |
        // |   A   |   S   |   H   |   T   |   G   |            |   Y   |   N   |   E   |   O   |   I   |
        // |   Z   |   X   |   M   |   C   |   V   |            |   K   |   L   |   ,   |   .   |  RET  |
        //                         | LSHFT | LOWER |            | RAISE | SPACE |

       		default_layer {
		bindings = <
		&mt ESC Q   &kp D &kp R &kp W &kp B 						&kp J     &kp F   &kp U     &kp P   &kp SEMI 
		&kp A       &kp S &kp H &kp T &kp G 			      &kp Y     &kp N   &kp E     &kp O   &kp I
		&kp Z       &kp X &kp M &kp C &kp V				      &kp K     &kp L   &kp CMMA  &kp DOT &kp RET
          				    &kp LSHFT   &mo LOWER  				&mo RAISE &kp SPACE 
		>;
		};

        // ----------------------------------------------------------------------------------------------
        // |   1   |   2   |   3   |   4   |   5   |            |   6   |   7   |   8   |   9   |   0   |
        // |  TAB  |   ^   |   &   |   *   |   (   |            |   )   |   J   |   K   |   L   |   "   |
        // |  ESC  |   X   |   C   |   V   |   {   |            |   }   |   M   |   ,   |   .   |  RET  |
        //                         | LOWER |  LCTL |            | RSHFT |  RGUI |

       		left_layer {
		bindings = <
		&kp N1     &kp N2       &kp N3          &kp N4          &kp N5		        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
		&kp TAB    &kp LC(S)    &kp DQT         &kp PIPE2       &kp HASH 		      &kp MINUS &kp EQL   &kp LBKT  &kp RBKT  &kp APOS 
		&kp ESC    &kp TILDE 	  &kp NON_US_BSLH &kp NON_US_HASH &kp TILDE2 	      &kp MINUS &kp GRAVE &kp LBKT  &kp RBKT  &kp DEL 
					                                  &kp LGUI        &mo LOWER 				&mo RSHFT &kp RGUI 
		>;
		};
		
        // ----------------------------------------------------------------------------------------------
        // |   `   |   2   |   3   |   4   |   [   |            |   ]   |   7   |  UP   |   9   | BSPC  |
        // |   F1  |   F2  |   F3  |   F4  |   (   |            |   )   | LEFT  |  DOWN | RIGHT |   \   |
        // |   F7  |   F8  |   F9  |  F10  |   {   |            |   }   |   M   |   ,   |   .   |  RET  |
        //                         | LSHFT |  LCTL |            | SPACE | RAISE |


		right_layer {
		bindings = <
		&kp GRAVE &kp N2    &kp N3      &kp N4      &kp LBKT		      &kp RBKT  &kp N7        &kp UP    &kp N9    &kp BSPC
		&kp HASH  &kp QMARK &kp FSLH    &kp COLN    &kp LPAR 			    &kp RPAR  &kp LEFT      &kp DOWN  &kp RIGHT &kp BSLH
		&kp LSFT  &kp KPLS  &kp LBKT    &kp RBKT    &kp LBRC    			&kp RBRC  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
					                          &kp LCTL    &mo 3  				    &mo RAISE &kp SPC 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};